# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input AssignRoleInput {
  email: String!
  roleName: String!
}

type AuthResponse {
  accessToken: String!
  refreshToken: String!
}

type Contact {
  contactInfos: [ContactInfo!]
  firstName: String!
  id: ID!
  lastName: String!
  user: User
  userId: ID
}

type ContactInfo {
  contact: Contact
  contactId: String
  id: ID!
  infoType: String!
  value: String!
}

input ContactInput {
  contactInfos: [IContactInfo!]!
  firstName: String!
  lastName: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input GetUserInput {
  type: String!
  value: String!
}

input IContact {
  contactInfos: [IContactInfo!]
  firstName: String!
  id: ID! = "40ad4eed-f189-4b52-b0cb-5019b8909db3"
  lastName: String!
  user: IUser
  userId: ID
}

input IContactInfo {
  contact: IContact
  contactId: String
  id: ID! = "dca8743d-330f-49ec-a8a3-3ed23717b57a"
  infoType: String!
  value: String!
}

input IRole {
  createdAt: DateTime
  deletedAt: DateTime
  description: String
  id: ID! = "16bc2e72-b7f7-4bbe-9274-6b6f0e88a30a"
  roleName: String!
  updatedAt: DateTime
}

input IUser {
  accessRights: String! = "USER"
  avatar: String
  createdAt: DateTime!
  deletedAt: DateTime
  email: String
  firstName: String!
  id: ID! = "2e37fd94-a699-4106-b7e0-ca8b8db10423"
  isVerified: Boolean! = false
  lastName: String!
  password: String!
  role: IRole
  updatedAt: DateTime!
  username: String
}

type Mutation {
  AddRole(role: RoleInput!): Role!
  AssignRole(input: AssignRoleInput!): Boolean!
  DeleteRole(id: String!): Boolean!
  RequestPasswordReset(email: String!): Boolean!
  ResetPassword(password: String!, token: String!): Boolean!
  SendVerification(email: String!): Boolean!
  Signin(input: SigninInput!): AuthResponse!
  SignoutUser: Boolean!
  SignupUser(input: SignupInput!): AuthResponse!
  UpdateRole(id: String!, role: RoleInput!): Role!
  VerifyUser(token: String!): AuthResponse!
  createContact(input: ContactInput!): Contact!
  createContactInfo(contactId: String!, input: IContactInfo!): ContactInfo!
  deleteContact(id: String!): Boolean!
  deleteContactInfo(id: String!): Boolean!
  mergeDuplicates(contactId: String!): Boolean!
  updateContact(id: String!, input: ContactInput!): Contact!
  updateContactInfo(id: String!, input: IContactInfo!): ContactInfo!
  updateContacts(ids: [String!]!, input: IContact!): [Contact!]!
  updateProfile(input: ProfileInput!): User!
}

input ProfileInput {
  avatar: String
  bio: String
  firstName: String
  lastName: String
  phoneNumber: String
}

type Query {
  GetProfile: User!
  GetRole(id: String!): Role!
  GetRoles: [Role!]!
  GetUser(input: GetUserInput!): User!
  GetUsers: [User!]!
  contact(id: String!): Contact!
  contacts(id: String!): [Contact!]!
  getDuplicates(contactId: String!): [Contact!]!
}

type Role {
  createdAt: DateTime
  deletedAt: DateTime
  description: String
  id: ID!
  roleName: String!
  updatedAt: DateTime
}

input RoleInput {
  description: String
  roleName: String!
}

input SigninInput {
  email: String!
  password: String!
}

input SignupInput {
  email: String!
  firstName: String!
  lastName: String!
  password: String!
}

type User {
  accessRights: String!
  avatar: String
  createdAt: DateTime!
  deletedAt: DateTime
  email: String
  firstName: String!
  id: ID!
  isVerified: Boolean!
  lastName: String!
  password: String!
  role: Role
  updatedAt: DateTime!
  username: String
}